<UserControl x:Class="VisGist.MainWindow"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:imaging="clr-namespace:Microsoft.VisualStudio.Imaging;assembly=Microsoft.VisualStudio.Imaging"
             xmlns:catalog="clr-namespace:Microsoft.VisualStudio.Imaging;assembly=Microsoft.VisualStudio.ImageCatalog"
             xmlns:toolkit="clr-namespace:Community.VisualStudio.Toolkit;assembly=Community.VisualStudio.Toolkit"
             xmlns:vsshell="clr-namespace:Microsoft.VisualStudio.Shell;assembly=Microsoft.VisualStudio.Shell.15.0"
             xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:behaviours="clr-namespace:VisGist.Behaviors"
             xmlns:syncfusion="http://schemas.syncfusion.com/wpf"
             xmlns:controls="clr-namespace:VisGist.Controls"
             xmlns:converters="clr-namespace:VisGist.Converters" 
             xmlns:views="clr-namespace:VisGist.Views"
             xmlns:viewmodels="clr-namespace:VisGist.ViewModels" 
             xmlns:models="clr-namespace:VisGist.Models"             
             toolkit:Themes.UseVsTheme="True"
             Background="{DynamicResource {x:Static vsshell:VsBrushes.WindowKey}}"
             Foreground="{DynamicResource {x:Static vsshell:VsBrushes.WindowTextKey}}"
             mc:Ignorable="d"
             d:DesignHeight="300"
             d:DesignWidth="300"
             Name="MyToolWindow" SizeChanged="MyToolWindow_SizeChanged">

    <UserControl.DataContext>
        <viewmodels:MainWindowViewModel/>
    </UserControl.DataContext>

    <UserControl.Resources>

        <!-- CONVERTERS ================================================================================= -->
        <converters:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter" />
        <converters:InverseBoolToVisibilityConverter x:Key="InverseBoolToVisibilityConverter" />
        <converters:GistFilesVMToFirstFilenameConverter x:Key="GistFilesToFirstFilenameConverter"/>
        <converters:ReverseBoolConverter x:Key="ReverseBoolConverter"/>
        <converters:BrushToColorConverter x:Key="BrushToColorConverter"/>

        <!-- STYLES ================================================================================= -->

        <!-- TOOLBAR STYLE -->

        <Style x:Key="ToolBarTray" TargetType="ToolBarTray">
            <Setter Property="Background" Value="Transparent" />
        </Style>

        <Style x:Key="ToolBar" TargetType="ToolBar">
            <Setter Property="Background" Value="Transparent" />
        </Style>

        <Style x:Key="{x:Static ToolBar.ButtonStyleKey}" TargetType="Button">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Focusable" Value="False"/>
        </Style>

        <Style x:Key="{x:Static ToolBar.ToggleButtonStyleKey}" TargetType="ToggleButton">
            <Setter Property="Background" Value="Transparent"/>
        </Style>

        <!-- TOGGLEBUTTON STYLE-->

        <Style TargetType="{x:Type ToggleButton}" x:Key="TransparentToggleButtonStyle">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ToggleButton">
                        <Border BorderBrush="{TemplateBinding BorderBrush}" 
                                Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Center"                  
                                              VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Background" Value="Transparent"></Setter>
            <Style.Triggers>
                <Trigger Property="IsChecked" Value="False">
                    <!--<Setter Property="Background" Value="Black" />-->
                    <Setter Property="Opacity" Value="0.3" />
                </Trigger>
                <!--<Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="BorderThickness" Value="2" />
                </Trigger>-->

            </Style.Triggers>
        </Style>

        <!-- TEXTBLOCK STYLES -->

        <Style x:Key="SemiTransparentText" TargetType="TextBlock">
            <Setter Property="Opacity" Value="0.6"/>
        </Style>

        <!-- CONTEXTMENU STYLE -->
        <Style x:Key="ContextMenu" TargetType="ContextMenu">
            <Setter Property="Background" Value="{DynamicResource {x:Static vsshell:VsBrushes.WindowKey}}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static vsshell:VsBrushes.WindowTextKey}}"/>
        </Style>

        <!-- MENU ITEM STYLE -->
        <Style x:Key="MenuItem" TargetType="MenuItem">
            <Setter Property="Background" Value="{DynamicResource {x:Static vsshell:VsBrushes.WindowKey}}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static vsshell:VsBrushes.WindowTextKey}}"/>
        </Style>



        <!-- SEPARATORSTYLE -->
        <Style x:Key="SplitterStyle" TargetType="GridSplitter">
            <Setter Property="BorderBrush" Value="#909090"/>
            <Setter Property="Opacity" Value="0.5"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="1"/>
        </Style>

        <!--<Style x:Key="ToggleButton" TargetType="ToggleButton">
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="Content" Value="EDIT"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ToggleButton">
                        <Border x:Name="border"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}"
                            SnapsToDevicePixels="True">
                            <ContentPresenter x:Name="contentPresenter"
                                                  ContentTemplate="{TemplateBinding ContentTemplate}"
                                                  Content="{TemplateBinding Content}"
                                                  ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                                  Focusable="False"
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  Margin="{TemplateBinding Padding}"
                                                  RecognizesAccessKey="True"
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="true">
                    <Setter Property="Content" Value="Done"/>
                    <Setter Property="FontWeight" Value="Bold"/>
                </Trigger>
            </Style.Triggers>
        </Style>-->


        <!--LOAD GISTS ICON -->
        <!--<DataTemplate x:Key="LoadGistsSmallIcon">
            <imaging:CrispImage Width="16" Height="16" Moniker="{x:Static catalog:KnownMonikers.UpdateListItem}" />
        </DataTemplate>-->




    </UserControl.Resources>

    <!-- WINDOW ================================================================================= -->
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Loaded" SourceObject ="{Binding ElementName=MyToolWindow}">
            <i:InvokeCommandAction Command="{Binding DoPostLoadActionsCMD}"/>
        </i:EventTrigger>
    </i:Interaction.Triggers>

    <DockPanel x:Name="MainDP" Height="Auto">

        <!-- TOP TOOLSTRIP -->
        <DockPanel x:Name="TopToolbarDP" DockPanel.Dock="Top">

            <ToolBarTray x:Name="GreeterTBT" Style="{DynamicResource ToolBarTray}" Visibility="{Binding IsAuthenticated,
                Converter={StaticResource InverseBoolToVisibilityConverter}}" Background="Transparent">
                <controls:ToolBar Style="{DynamicResource ToolBar}" ToolBarTray.IsLocked="true">

                    <Button x:Name="LoginBT" Command="{Binding GitAuthenticateCMD}" ToolTip="Log In">
                        <imaging:CrispImage Width="16" Height="16" Moniker="{x:Static catalog:KnownMonikers.LoginUser}" />
                    </Button>

                </controls:ToolBar>
            </ToolBarTray>

            <ToolBarTray x:Name="MainTBT" Style="{DynamicResource ToolBarTray}" Visibility="{Binding IsAuthenticated,
                Converter={StaticResource BoolToVisibilityConverter}}" d:Visibility="Visible">
                <controls:ToolBar Style="{DynamicResource ToolBar}" ToolBarTray.IsLocked="true">

                    <Button x:Name="LogoutBT" Command="{Binding LogOutCMD}" ToolTip="Log Out">
                        <imaging:CrispImage Width="16" Height="16" Moniker="{x:Static catalog:KnownMonikers.UserError}" />
                    </Button>

                    <Button x:Name="RefreshBT" Command="{Binding GetAllGistsCMD}" ToolTip="Get Gists from Github">
                        <imaging:CrispImage Width="16" Height="16" Moniker="{x:Static catalog:KnownMonikers.Refresh}" />
                    </Button>

                    <Button x:Name="NewGistBT" Command="{Binding AddNewGistCMD}" ToolTip="New Gist">
                        <imaging:CrispImage Width="16" Height="16" Moniker="{x:Static catalog:KnownMonikers.NewListItem}" />
                    </Button>


                    <Button x:Name="TestBT" Command="{Binding DoTestActionCMD}" ToolTip="Test">
                        <imaging:CrispImage Width="16" Height="16" Moniker="{x:Static catalog:KnownMonikers.NewTest}" />
                    </Button>

                </controls:ToolBar>
            </ToolBarTray>

        </DockPanel>


        <!-- SEARCH TEXTBOX -->
        <TextBox x:Name="SearchTB" DockPanel.Dock="Top" Margin="4" Visibility="{Binding IsAuthenticated, 
            Converter={StaticResource InverseBoolToVisibilityConverter}}" Text="{Binding HelloWorld}">
        </TextBox>

        <!-- STATUS BAR -->
        <StatusBar x:Name="MainSB" DockPanel.Dock="Bottom" Margin="4" 
                   Foreground="{DynamicResource {x:Static vsshell:VsBrushes.WindowTextKey}}" Background="Transparent">

            <DockPanel LastChildFill="True" HorizontalAlignment="Stretch">
                <imaging:CrispImage Tag="{Binding StatusImage}" DockPanel.Dock="Left"  Width="16" Height="16">
                    <imaging:CrispImage.Style>
                        <Style TargetType="imaging:CrispImage">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding StatusImage}" Value="Information">
                                    <Setter Property="Moniker" Value="{x:Static catalog:KnownMonikers.StatusInformation}"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding StatusImage}" Value="Warning">
                                    <Setter Property="Moniker" Value="{x:Static catalog:KnownMonikers.StatusWarning}"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding StatusImage}" Value="Success">
                                    <Setter Property="Moniker" Value="{x:Static catalog:KnownMonikers.StatusOK}"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding StatusImage}" Value="GitOperation">
                                    <Setter Property="Moniker" Value="{x:Static catalog:KnownMonikers.Git}"/>
                                </DataTrigger>

                            </Style.Triggers>
                        </Style>
                    </imaging:CrispImage.Style>
                </imaging:CrispImage>
                <TextBlock Text="{Binding StatusText}" DockPanel.Dock="Left" Padding="6,0,2,0"></TextBlock>
                <!--<ProgressBar Height="2" Foreground="Blue" IsIndeterminate="True"
                             Visibility="{Binding AsyncOperationStatusManager.CurrentOperation.Execution.IsNotCompleted, Converter={StaticResource boolToVisibilityConverter}, FallbackValue=Collapsed}"/>-->
                <ProgressBar Height="2" Foreground="Orange" IsIndeterminate="True" Width="100" Margin="10,0,10,0"
                             Visibility="{Binding StatusBarVisible, Converter={StaticResource BoolToVisibilityConverter}}"/>

            </DockPanel>
        </StatusBar>


        <!-- MAIN CONTENT PANEL -->

        <!--<ContentControl>
            <ContentControl.Resources>
                <DataTemplate x:Key="mainTable">
                    <StackPanel>
                        <Label Content="MainTable goes here"/>
                    </StackPanel>
                </DataTemplate>
                <DataTemplate x:Key="childTables">
                    <Label Content="ChildTables go here"/>
                </DataTemplate>
            </ContentControl.Resources>
            <ContentControl.Style>
                <Style TargetType="ContentControl">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding LayoutHorizontal}" Value="False">
                            <Setter Property="ContentTemplate">
                                <Setter.Value>
                                    <DataTemplate>
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition/>
                                                <ColumnDefinition Width="2"/>
                                                <ColumnDefinition/>
                                            </Grid.ColumnDefinitions>
                                            <ContentPresenter Grid.Column="0" ContentTemplate="{StaticResource mainTable}"/>
                                            <GridSplitter Grid.Column="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                                                          Foreground="Gray" Opacity="0.5"/>
                                            <ContentPresenter Grid.Column="2" ContentTemplate="{StaticResource childTables}"/>
                                        </Grid>
                                    </DataTemplate>
                                </Setter.Value>
                            </Setter>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding LayoutHorizontal}" Value="True">
                            <Setter Property="ContentTemplate">
                                <Setter.Value>
                                    <DataTemplate>
                                        <Grid>
                                            <Grid.RowDefinitions>
                                                <RowDefinition/>
                                                <RowDefinition Height="1"/>
                                                <RowDefinition/>
                                            </Grid.RowDefinitions>
                                            <ContentPresenter Grid.Row="0" ContentTemplate="{StaticResource mainTable}"/>
                                            <GridSplitter Grid.Row="1" Height="10" VerticalAlignment="Stretch" HorizontalAlignment="Stretch"
                                                          Foreground="Gray" Opacity="0.5"/>
                                            <ContentPresenter Grid.Row="2" ContentTemplate="{StaticResource childTables}"/>
                                        </Grid>
                                    </DataTemplate>
                                </Setter.Value>
                            </Setter>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </ContentControl.Style>
        </ContentControl>-->


        <Grid x:Name="MainContentSP"  HorizontalAlignment="Stretch"
                   Visibility="{Binding IsAuthenticated, Converter={StaticResource BoolToVisibilityConverter}}" >

            <Grid.RowDefinitions>
                <RowDefinition Height="*" MinHeight="100"></RowDefinition>
                <RowDefinition Height="3"></RowDefinition>
                <RowDefinition Height="*"></RowDefinition>
                <RowDefinition Height="3"></RowDefinition>

            </Grid.RowDefinitions>

            <!-- GIST BROWSER -->

            <Grid x:Name="GistBrowserGRD" Grid.Row="0" Margin="2">
                <Grid.Resources>
                    <HierarchicalDataTemplate DataType="{x:Type viewmodels:GistViewModel}" ItemsSource="{Binding Path=GistFiles}">
                        <StackPanel Orientation="Horizontal">

                            <imaging:CrispImage VerticalAlignment="Center"  Width="16" Height="16" Margin="0,0,4,0"
                                                Moniker="{x:Static catalog:KnownMonikers.Item}"/>

                            <TextBlock VerticalAlignment="Center" Margin="2,0,2,0"
                                Text="{Binding GistFiles, Converter={StaticResource GistFilesToFirstFilenameConverter}}"></TextBlock>

                            <imaging:CrispImage VerticalAlignment="Center" Margin="2,0,2,0" Width="14" Height="14"
                                Moniker="{x:Static catalog:KnownMonikers.Key}"
                                Visibility="{Binding Public, Converter={StaticResource InverseBoolToVisibilityConverter}}"/>

                            <imaging:CrispImage VerticalAlignment="Center" Margin="2,0,2,0" Width="14" Height="14" 
                                Moniker="{x:Static catalog:KnownMonikers.Favorite}"
                                Visibility="{Binding Starred, Converter={StaticResource BoolToVisibilityConverter}}"/>

                            <imaging:CrispImage VerticalAlignment="Center" Margin="2,0,2,0" Width="14" Height="14" 
                                Moniker="{x:Static catalog:KnownMonikers.Save}"
                                Visibility="{Binding HasChanges, Converter={StaticResource BoolToVisibilityConverter}}"
                                ToolTip="{Binding PropertiesChanged}"/>

                            <StackPanel.ContextMenu>
                                <ContextMenu Style="{StaticResource ContextMenu}">
                                    <MenuItem Header="Delete Gist" Background="{DynamicResource {x:Static vsshell:VsBrushes.WindowKey}}"
                                              Style="{StaticResource MenuItem}" 
                                              Command="{Binding Parent ,
                                                RelativeSource={RelativeSource Self}}">
                                        <MenuItem.Icon>
                                            <imaging:CrispImage Moniker="{x:Static catalog:KnownMonikers.DeleteListItem}"/>
                                        </MenuItem.Icon>
                                    </MenuItem>
                                </ContextMenu>
                            </StackPanel.ContextMenu>

                        </StackPanel>
                    </HierarchicalDataTemplate>
                    <DataTemplate DataType="{x:Type viewmodels:GistFileViewModel}">
                        <StackPanel Orientation="Horizontal">
                            <imaging:CrispImage VerticalAlignment="Center" Width="16" Height="16" Margin="0,0,4,0"
                                                Moniker="{x:Static catalog:KnownMonikers.Document}" />
                            <TextBlock  VerticalAlignment="Center" Margin="2,0,2,0" Text="{Binding Filename}"></TextBlock>
                        </StackPanel>
                    </DataTemplate>
                </Grid.Resources>
                <TreeView x:Name="GistsTV" ItemsSource="{Binding Gists}" BorderThickness="0" Background="Transparent">
                    <TreeView.Resources>
                        <!-- Style the inactive selection the same as active -->
                        <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightBrushKey}"
                            Color="#808080" Opacity="0.4"/>
                        <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}"
                            Color="{DynamicResource {x:Static SystemColors.HighlightTextColorKey}}"/>
                    </TreeView.Resources>
                    <i:Interaction.Behaviors>
                        <behaviours:BindableSelectedItemBehavior SelectedItem="{Binding SelectedGistVmItem, Mode=TwoWay}" />
                    </i:Interaction.Behaviors>
                </TreeView>
            </Grid>

            <!-- SPLITTER -->

            <GridSplitter Grid.Row="1" Style="{StaticResource SplitterStyle}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                          ResizeDirection="{Binding BrowserEditorsSplitterDirection}" />

            <!--GIST EDITOR -->

            <StackPanel x:Name="GistEditorSP" Grid.Row="2" Orientation="Vertical"  >
                <DockPanel x:Name="GistEditorTopRowSP" >

                    <ToggleButton DockPanel.Dock="Right"  BorderThickness="0" 
                                  Style="{StaticResource TransparentToggleButtonStyle}"
                                  IsChecked="{Binding SelectedGistViewModel.Public,
                                    Converter={StaticResource ReverseBoolConverter},
                                    Mode=TwoWay}">
                        <imaging:CrispImage Width="16" Height="16" Moniker="{x:Static catalog:KnownMonikers.Key}"/>
                    </ToggleButton>

                    <ToggleButton DockPanel.Dock="Right" Background="Transparent" BorderThickness="0"
                                  Style="{StaticResource TransparentToggleButtonStyle}"
                                    IsChecked="{Binding SelectedGistViewModel.Starred, Mode=TwoWay}">
                        <imaging:CrispImage Width="16" Height="16" Moniker="{x:Static catalog:KnownMonikers.Favorite}"/>
                    </ToggleButton>

                    <ContentControl DockPanel.Dock="Left" Margin="4,0,0,0">
                        <imaging:CrispImage  Width="16" Height="16" Moniker="{x:Static catalog:KnownMonikers.Item}"/>
                    </ContentControl>

                    <TextBlock x:Name="GistNameTBL" Padding="4" Style="{StaticResource SemiTransparentText}" TextTrimming="CharacterEllipsis"
                               Text="{Binding SelectedGistViewModel.FirstGistFileFilename}" FontWeight="Bold"></TextBlock>

                </DockPanel>

                <TextBox x:Name="GistDescriptionTB" MinHeight="32" Background="Transparent" BorderThickness="1" Padding="1" AcceptsReturn="True" 
                         Text="{Binding SelectedGistViewModel.Description}"
                         CaretBrush="{DynamicResource {x:Static vsshell:VsBrushes.WindowTextKey}}"></TextBox>
            </StackPanel>

            <!-- SPLITTER -->

            <GridSplitter Grid.Row="3" Style="{StaticResource SplitterStyle}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                          ResizeDirection="{Binding BrowserEditorsSplitterDirection}" />

            <!-- GISTFILE EDITOR -->




        </Grid>



    </DockPanel>

</UserControl>
