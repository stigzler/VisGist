<UserControl x:Class="VisGist.MainWindow"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:imaging="clr-namespace:Microsoft.VisualStudio.Imaging;assembly=Microsoft.VisualStudio.Imaging"
             xmlns:catalog="clr-namespace:Microsoft.VisualStudio.Imaging;assembly=Microsoft.VisualStudio.ImageCatalog"
             xmlns:toolkit="clr-namespace:Community.VisualStudio.Toolkit;assembly=Community.VisualStudio.Toolkit"
             xmlns:vsshell="clr-namespace:Microsoft.VisualStudio.Shell;assembly=Microsoft.VisualStudio.Shell.15.0"
             xmlns:behaviours="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:controls="clr-namespace:VisGist.Controls"
             xmlns:converters="clr-namespace:VisGist.Converters" 
             xmlns:viewmodels="clr-namespace:VisGist.ViewModels" 
             toolkit:Themes.UseVsTheme="True"
             Background="{DynamicResource {x:Static vsshell:VsBrushes.WindowKey}}"
             Foreground="{DynamicResource {x:Static vsshell:VsBrushes.WindowTextKey}}"
             mc:Ignorable="d"
             d:DesignHeight="300"
             d:DesignWidth="300"
             Name="MyToolWindow">

    <UserControl.DataContext>
        <viewmodels:MainWindowViewModel/>
    </UserControl.DataContext>

    <UserControl.Resources>

        <!-- CONVERTERS ================================================================================= -->
        <converters:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter" />
        <converters:InverseBoolToVisibilityConverter x:Key="InverseBoolToVisibilityConverter" />

        <!-- STYLES ================================================================================= -->

        <!-- TOOLBAR STYLE -->

        <Style x:Key="ToolBarTray" TargetType="ToolBarTray">
            <Setter Property="Background" Value="Transparent" />
        </Style>

        <Style x:Key="ToolBar" TargetType="ToolBar">
            <Setter Property="Background" Value="Transparent" />
        </Style>

        <Style x:Key="{x:Static ToolBar.ButtonStyleKey}" TargetType="Button">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Focusable" Value="False"/>
        </Style>

        <Style x:Key="{x:Static ToolBar.ToggleButtonStyleKey}" TargetType="Button">
            <Setter Property="Background" Value="Transparent"/>
        </Style>

        <!--BUTTON STYLE-->
        <Style x:Key="ToggleButton" TargetType="ToggleButton">
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="BorderThickness" Value="0" />
        </Style>


    </UserControl.Resources>

    <!-- WINDOW ================================================================================= -->
    <behaviours:Interaction.Triggers>
        <behaviours:EventTrigger EventName="Loaded" SourceObject ="{Binding ElementName=MyToolWindow}">
            <behaviours:InvokeCommandAction Command="{Binding DoPostLoadActionsCMD}"/>
        </behaviours:EventTrigger>
    </behaviours:Interaction.Triggers>

    <DockPanel x:Name="MainDP" Height="Auto" LastChildFill="False">
        <DockPanel x:Name="TopToolbarDP" DockPanel.Dock="Top">

            <ToolBarTray x:Name="GreeterTBT" Style="{DynamicResource ToolBarTray}" Visibility="{Binding IsAuthenticated,
                Converter={StaticResource InverseBoolToVisibilityConverter}}" Background="Transparent">
                <controls:ToolBar Style="{DynamicResource ToolBar}" ToolBarTray.IsLocked="true">

                    <Button x:Name="LoginBT" Command="{Binding GitAuthenticateCMD}" ToolTip="Log In">
                        <imaging:CrispImage Width="16" Height="16" Moniker="{x:Static catalog:KnownMonikers.LoginUser}" />
                    </Button>


                </controls:ToolBar>
            </ToolBarTray>

            <ToolBarTray x:Name="MainTBT" Style="{DynamicResource ToolBarTray}" Visibility="{Binding IsAuthenticated,
                Converter={StaticResource BoolToVisibilityConverter}}">
                <controls:ToolBar Style="{DynamicResource ToolBar}" ToolBarTray.IsLocked="true">

                    <Button x:Name="LogoutBT" Command="{Binding LogOutCMD}" ToolTip="Log Out">
                        <imaging:CrispImage Width="16" Height="16" Moniker="{x:Static catalog:KnownMonikers.UserError}" />
                    </Button>

                    <Button x:Name="TestBT" Command="{Binding DoTestActionCMD}" ToolTip="Test">
                        <imaging:CrispImage Width="16" Height="16" Moniker="{x:Static catalog:KnownMonikers.NewTest}" />
                    </Button>

                </controls:ToolBar>
            </ToolBarTray>

        </DockPanel>

        <TextBox x:Name="SearchBox" DockPanel.Dock="Top" Margin="4" Visibility="{Binding IsAuthenticated, 
            Converter={StaticResource InverseBoolToVisibilityConverter}}" Text="{Binding HelloWorld}">
        </TextBox>

        <!--<StatusBar x:Name="MainSB" DockPanel.Dock="Bottom" Foreground="{DynamicResource {x:Static vsshell:VsBrushes.WindowTextKey}}" Margin="4" Background="Transparent">-->

        <StatusBar x:Name="MainSB" DockPanel.Dock="Bottom"  Margin="4" 
                   Foreground="{DynamicResource {x:Static vsshell:VsBrushes.WindowTextKey}}" Background="Transparent">

            <StackPanel Orientation="Horizontal">

                <imaging:CrispImage Tag="{Binding StatusImage}" Width="16" Height="16">
                    <imaging:CrispImage.Style>
                        <Style TargetType="imaging:CrispImage">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding StatusImage}" Value="Information">
                                    <Setter Property="Moniker" Value="{x:Static catalog:KnownMonikers.StatusInformation}"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding StatusImage}" Value="Warning">
                                    <Setter Property="Moniker" Value="{x:Static catalog:KnownMonikers.StatusWarning}"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding StatusImage}" Value="Success">
                                    <Setter Property="Moniker" Value="{x:Static catalog:KnownMonikers.StatusOK}"/>
                                </DataTrigger>

                            </Style.Triggers>
                        </Style>
                    </imaging:CrispImage.Style>
                </imaging:CrispImage>

                <TextBlock Text="{Binding StatusText}" Padding="6,0,2,0"></TextBlock>

            </StackPanel>
        </StatusBar>


        </DockPanel>

</UserControl>
